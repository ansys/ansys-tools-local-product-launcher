[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
# Check https://python-poetry.org/docs/pyproject/ for all available sections
name = "ansys-tools-local-product-launcher"
version = "0.1.dev0"
description = "A utility for launching ansys products on the local machine"
license = "MIT"
authors = ["ANSYS, Inc. <ansys.support@ansys.com>"]
maintainers = ["PyAnsys developers <pyansys.maintainers@ansys.com>"]
readme = "README.rst"
repository = "https://github.com/pyansys/ansys-tools-local-product-launcher"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "ansys", from = "src" },
]

[tool.poetry.scripts]
ansys-launcher = "ansys.tools.local_product_launcher._cli:cli"


[tool.poetry.dependencies]
python = ">=3.7,<4.0"
importlib-metadata = {version = "^4.0", python = "<3.8"}
typing-extensions = "^4.0"
pydantic = "^1.10.2"
click = "^8.1.3"
grpcio-health-checking = "^1.43"
grpcio = "^1.51.1"
appdirs = "^1.4.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.17.0"
black = "22.3.0"
mypy = "^0.931"
mypy-extensions = "^0.4.3"
types-setuptools = "^65.6.0.2"

Sphinx = "^5.0"
sphinx-copybutton = "^0.4"
sphinx-autodoc-typehints = "^1.19"
numpydoc = "^1.3"
ansys-sphinx-theme = "^0"
pypandoc = "^1.10"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.0"
pytest-cov = "^4.0.0"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
line_length = 100
default_section = "THIRDPARTY"
src_paths = ["doc", "src", "tests"]

[tool.coverage.run]
source = ["ansys.tools"]

[tool.coverage.report]
show_missing = true

[tool.mypy]
python_version = 3.7
mypy_path = "$MYPY_CONFIG_FILE_DIR/src:$MYPY_CONFIG_FILE_DIR/tests"

[[tool.mypy.overrides]]
module = [
    "grpc.*",
    "grpc_health.*",
    "appdirs",
    "pytest",
]
ignore_missing_imports = true
